%p
  The Callback API is explained in the
  %a{href: 'https://github.com/zold-io/wts.zold.io#callback-api'} README
  document.

%form{method: 'GET', action: '/wait-for'}
  %fieldset
    %label
      The ID of the wallet to scan:
    %input{type: 'text', name: 'wallet', autocomplete: 'off', required: true, tabindex: 1, autofocus: true, value: user.item.id}
    %label
      %a{href: 'https://blog.zold.io/2018/08/06/invoices.html'} Invoice
      prefix:
    %input{type: 'text', name: 'prefix', maxlength: 32, size: 15, autocomplete: 'off', required: true, tabindex: 2}
    %label
      Ruby
      %a{href: 'https://ruby-doc.org/core-2.1.1/Regexp.html'} RegExp
      to match the details:
    %input{type: 'text', name: 'regexp', size: 25, autocomplete: 'off', tabindex: 3, placeholder: '^.*$'}
    %label
      URI to call when matched:
    %input{type: 'url', name: 'uri', size: 55, autocomplete: 'off', required: true, tabindex: 4, value: 'https://wts.zold.io/null'}
    %input{type: 'submit', tabindex: 5, value: 'Add'}

%p
  This is the full list of callbacks we have in your account:

%table{style: 'width:100%; font-size:80%;'}
  %colgroup
    %col{style: 'width: 2em'}
    %col{style: 'width: 5em'}
    %col{style: 'width: 5em'}
    %col{style: ''}
    %col{style: 'width: 10em'}
  %thead
    %tr
      %th
        ID
      %th
        Wallet
      %th
        Prefix
      %th
        RegExp
      %th
        Created
      %th
        Matched
  %tbody
    - callbacks.fetch(confirmed_user.login).each do |c|
      %tr
        %td
          = c['id']
        %td
          %code
            %a{href: "http://www.zold.io/ledger.html?wallet=#{c['wallet']}"}= c['wallet']
        %td
          %code
            = c['prefix']
        %td
          %code
            = c['regexp']
        %td{title: Time.parse(c['created']).utc.iso8601}
          = Zold::Age.new(Time.parse(c['created']))
        %td
          - if c['matched']
            %span{title: Time.parse(c['matched']).utc.iso8601}
              = Zold::Age.new(Time.parse(c['matched']))
          - else
            = '&mdash;'
